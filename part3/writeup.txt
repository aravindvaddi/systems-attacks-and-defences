BUG WRITE UP

fuzzer1.gft

Note: Line numbers are as of this commit.

Error: 
    giftcardreader was failing with the error 
    "*** stack smashing detected ***: terminated
    Aborted (core dumped)"

    This is likely due to a buffer overflow exploit present in the source

Bug: 
    Using gdb to debug, I located that the overflow was occuring due to lack of bounds checking in the switch case block, case '0x04' (line 43), arg2 was out of bounds with the value 30 and arg1 had a value 1.
    This was overwriting addresses that were supposed to be unaccessible
    
Fix:
    Added bounds checking for arg2 (line 43) with the snippet "if (arg2 >= 0 && arg2 <= 15)"

fuzzer2.gft

Error:
    giftcardreader was failing with the error
    "Segmentation fault (core dumped)"

    This is likely due to a part of the program trying to access inaccessible memory

Bug:
    Looking up the details using gdb shows that the program is trying to access memory that isn't there
    using bt full I got a backtrace and spotted that the error was due to the below, message parameter was pointing to an inaccessible address
    'string = 0x8948c8458b48ffff <error: Cannot access memory at address 0x8948c8458b48ffff>'
    'grouping = 0xffffffffffffffff <error: Cannot access memory at address 0xffffffffffffffff>'
    The binary (fuzzer2.gft) running through the animate function many times, specifically the case '0x03' where it changes the mptr pointer many times.
    This runs without a bounds check on mptr, as it's pointing to msg and msg is to be of 32 bytes maximum as per the specification.

Fix:
    Added bounds checking for mptr (line 40) with the snippet " if (mptr < (msg + 31))" to keep mptr within its limits.
